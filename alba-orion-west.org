#+OPTIONS: ':nil *:t -:t ::t <:t H:4 \n:nil ^:{} arch:headline
#+OPTIONS: author:t c:nil creator:nil d:(not "LOGBOOK") date:t e:t
#+OPTIONS: email:nil f:t inline:t num:t p:nil pri:nil prop:nil stat:t
#+OPTIONS: tags:t tasks:t tex:t timestamp:t title:t toc:t todo:t |:t
#+TITLE: Notes on creating spectral maps from Orion West slit spectra
#+AUTHOR: William Henney
#+LANGUAGE: en
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

#+PROPERTY: header-args    :exports both


* TODO New general version of the slit flux calibration and astrometry
+ It would be better to use the [[file:~/Work/OrionTreasury/wfi/][WFI images]] to flux calibrate the spectra
  + As well as being more reliable, this is necessary in the case of some of the LL2 slits, since the Image+slit was taken in [S II] instead of H alpha
+ We will apply it first to the LL2 slits, plus any other odd slits that are lying around
  + With the plan being to add in the original horizontal and vertical slits afterwards
+ As well as flux calibration, it will also help with the offset along the slit


** General policy for the workflow
+ The previous version had used org-babel source blocks that read directly from org-mode tables.
  - This is convenient for rapid development
  - But it makes the overall logic hard to follow
  - And hard to share with anyone not using emacs
+ So for this implementation I plan to do the following:
  1. Tangle all python scripts to files
  2. Write all data tables to files
     - Initial input table can be written as TSV from org table
     - Do I use JSON or astropy tables written to TSV, or to FITS or ...?
  3. Do I control it all with a makefile?

** Outline of steps

1. We use the image+slit in order to find the slit reference position
   + The image-spectrum offset along the slit has to be found iteratively through a later step
2. Compare the spectrum profile (=spec=) with a synthetic slit (=image=) on the WFI image
   + Similar to [[id:0B8D02D8-4C57-48A1-8F17-6AD60BFA1A7B][Application to the vertical slits]] and [[id:6CE33437-BC17-49AA-B048-5BACCBB8C99B][Repeat for the horizontal slits]]
   + Find the =jshift= value that best matches up the profiles
   + Find brightness normalization
     + Check for calibration gradients along the slit by plotting =spec/image= against =y=
     + Check for zero point errors by plotting  =spec= against =image=
     + [ ] One problem will be disentangling the above two effects, because if there is a strong systematic brightness gradient along the slit then their effects will be degenerate
   + Write out the slit astrometry and flux calibration to a table, similar to how we did [[id:6BFD88F6-71FD-48D3-B8E4-5FF55A3B3D9D][here]] for the vertical slits and [[id:F6ED03C3-EC32-4444-9746-4E3C2A15CD63][here]] for the horizontal slits 
3. Project the calibrated spectra onto a common spatial grid
   + For different velocity ranges
     + This requires finding the heliocentric correction
   + This is what we already did for the [[id:23C29E96-4471-454E-A463-D365731119C0][vertical]] and [[id:60833550-A462-4F18-86DE-895625FF3E7A][horizontal]] slits
     + We need to generalise this slightly so we can treat any PA (maybe that will work out of the box) and both cases for the dimension order of the spectra files (Y-V, or V-Y)

** Table of all slits 
:PROPERTIES:
:TABLE_EXPORT_FILE: all-slits-input.tab
:TABLE_EXPORT_FORMAT: orgtbl-to-tsv
:END:
This does not have all the slits yet, but it will eventually (I hope)

| |

* Dealing with the offset between image and spectrum
+ It seems that this is not as constant as I had hoped
  + In the [[id:8685D060-12A9-4E73-B069-11D5315ED8EB][vertical slits]] it varies from 52 to 60 pixels
  + And some slits do not have a reference star to use
+ One solution will be to compare the brightness profiles of the spectrum with that of the slit image
  + For the spectrum, we can sum in wavelength for the entire ha+nii range
  + For the image, we would sum a short width across the slit
+ Then we could either use the cross-correlation, or simple hunting, to find the best offset
+ At the same time, this would give the brightness factor between image and spec
  + We could use this to refine the brightness correction factors


** Application to the vertical slits
:PROPERTIES:
:dir:      ~/Dropbox/SPMJAN10/reducciones
:ID:       0B8D02D8-4C57-48A1-8F17-6AD60BFA1A7B
:END:
#+name: vertical-image-and-fullspec
| image |    spec | islit | jshift |  fac |  bfac |
|-------+---------+-------+--------+------+-------|
|   202 | 203-204 | 233.6 |   52.5 |  3.9 | 1.143 |
|   124 | 125-127 | 235.5 |   54.5 |  2.7 | 1.431 |
|   206 | 207-208 | 234.6 |     54 |  4.4 | 1.136 |
|   128 | 129-130 | 237.5 |     57 |  4.4 | 2.688 |
|   133 | 134-135 | 239.4 |     58 |    5 | 1.608 |
|   210 | 211-212 | 236.4 |     55 |  4.4 | 1.021 |
|   137 | 138-139 | 241.3 |     60 |  2.8 | 1.550 |
|   214 | 215-216 | 238.4 |     55 |  4.1 | 1.067 |
|   145 | 146-147 | 244.3 |     58 |  2.0 | 5.181 |
|   248 | 249-250 | 254.9 |     68 |  5.4 | 2.400 |
|   219 | 220-221 | 240.0 |   57.5 | 4.35 |     1 |
|   157 | 158-159 | 252.2 |     65 |  7.0 | 6.757 |
|   236 | 237-238 | 247.0 |     63 |  4.2 | 1.122 |
|   240 | 241-242 | 249.5 |     65 |  3.1 | 1.073 |
|   244 | 245-246 | 251.6 |     64 |  2.7 | 1.147 |
|   252 | 253-254 | 258.2 |     69 |  5.4 | 1.678 |

+ Pixel positions of slits (islit in table above) also vary between positions, so I have had to measure all of these
  + They are FITS style 1-based indices
  + The slit width is about 4 pixels
  + But the slit center does not fall on an integer pixel
  + To be safe, we take the 5 pixels: [int(islit) - 3 : int(islit) + 3] 
+ First stab:
  + Read in the images and spectra, and overplot the profiles
  + There are 16 positions now, so we can use a 4 x 4 grid
  + The =bfac= factors are the inter-position image brightness correction factors, calculated [[id:D625BE5F-BE3F-477A-8059-4B0AFEFEED54][below]] - they multiply all the brightnesses
    + On the graphs, I print out =bright = 1/bfac=
    + [2015-08-25 Tue] I am modifying by hand the bfac for 248 from 2.222 to 2.4
      + There is no justification for this, other than that it looks too faint on the maps
  + The =fac= factors are the image-to-spectrum brightness factors - they multiply the image profile so that it matches the spectrum profile
    + So larger factors mean better spectra (compared to what is expected from the image)
    + The most common factor /should/ correspond to equal conditions between image and spectrum. But in general =fac= could be larger or smaller than this.
    + I am assuing that =fac = 4.4= is the default value, and dividing all of them by this when I print the info on the plot
      + There are 4 spectra that have the optimum value of =bfac=:
        + 206, 128, 210, 219
      + Most of the other values are lower
        + This make sense if conditions were deteriorating during the night
        + Then each spectrum is worse than its preceding image
      + But a few are higher, implying improvements since the image:
        + 133, 248, 157, 252
        + These tend to have high values of bfac

#+header: :var table=vertical-image-and-fullspec
#+BEGIN_SRC python :return figfile :results file
  from astropy.io import fits
  import numpy as np
  import matplotlib.pyplot as plt
  import seaborn as sns; sns.set()
  sns.set_color_codes()

  nspec = 12
  ny = 512
  figfile = 'image-spec-offsets.pdf'
  yarray = np.arange(ny)
  layout = {'left': 0.05, 'bottom': 0.07, 'right': 0.99, 'top': 0.95,
            'wspace': 0.02, 'hspace': 0.02}
  fig, axgrid = plt.subplots(4, 4, sharex=True, sharey=True, gridspec_kw=layout)
  tweak = 1.2
  for (imid, specid, islit, jshift, factor, bfac), ax in zip(table, axgrid.flat):
      imfile = 'posiciones/spm{}-ardec.fits'.format(imid)
      specfile = 'spm{}h.fits'.format(specid)
      islit = int(float(islit))
      jshift = float(jshift)
      factor = float(factor)
      bfac = float(bfac)

      imhdu, = fits.open(imfile)
      spechdu, = fits.open(specfile)
  
      imhdu.data -= 1170.0  # remove bias
      improfile = imhdu.data[:, islit-3:islit+3].sum(axis=1)
      specprofile = spechdu.data.sum(axis=1)
 
      ax.plot(yarray+jshift, bfac*improfile/(1e4*tweak), label='image',
              c='r', lw=2, alpha=0.3)
      ax.plot(yarray, bfac*specprofile/(1e4*factor), label='spectrum',
              c='k', lw=0.6)

      text_pattern = 'pos #{} shift = {:.1f} factor = {:.2f} bright = {:.2f}'
      text = text_pattern.format(imid, jshift, factor/4.4, 1.0/bfac)
      ax.text(300, 0.1, text, ha='center', va='bottom', fontsize=7)

  axgrid[0, 0].legend(fontsize='xx-small', loc='upper left')
  axgrid[0, 0].set_xlim(0.0, 640)
  axgrid[0, 0].set_ylim(0.0, 5.5)
  axgrid[-1, 2].set_xlabel('pixel')
  axgrid[1, 0].set_ylabel('intensity')
  fig.suptitle('Alignment and flux calibration of vertical slits')
  fig.set_size_inches(11, 8.5)
  fig.savefig(figfile)


#+END_SRC

#+RESULTS:
[[file:/Users/will/Dropbox/SPMJAN10/reducciones/image-spec-offsets.pdf]]


** Repeat for the horizontal slits
:PROPERTIES:
:dir:      ~/Dropbox/SPMFEB13/WesternShocks
:ID:       6CE33437-BC17-49AA-B048-5BACCBB8C99B
:END:

#+name: horizontal-image-and-fullspec
| image |    slit |  night | jslit | dj | ishift | fac | bright | bgrad |
|-------+---------+--------+-------+----+--------+-----+--------+-------|
|   165 | 166-167 | 160213 | 468.5 | 12 |     67 | 5.5 |  0.777 |   1.4 |
|   169 | 170-171 | 160213 | 468.5 | 12 |     65 | 5.3 |  0.744 |   1.4 |
|   237 | 238-239 | 160213 | 467.0 | 12 |     74 | 5.5 |  0.969 |   1.0 |
|   232 | 233-234 | 160213 | 468.5 | 12 |     75 | 5.8 |  1.000 |   1.0 |
|   226 | 227-228 | 160213 | 468.5 | 12 |     75 | 6.0 |  0.998 |     1 |
|   149 | 150-151 | 160213 | 468.0 | 12 |     70 | 5.0 |  0.825 |   1.7 |
|   154 | 155-156 | 160213 | 467.2 | 12 |     67 | 5.2 |  0.862 |   1.7 |
|   159 | 160-161 | 160213 | 467.5 | 12 |     67 | 5.4 |  0.818 |   1.7 |
|   033 | 034-035 | 150213 | 467.0 | 12 |     67 | 5.5 |  0.837 |   0.8 |
|   029 | 030-031 | 150213 | 465.2 |  6 |     76 | 6.0 |  0.847 |   0.8 |

+ [2015-08-21 Fri] I have measured the y-pixel position of the slit (=jslit=) on the images - it is roughly constant, but not quite
  + We have to be careful to use the "Image" coordinate, not the "Physical" one
+ The slit width is 150 micron for all exept =029= where it is 70 micron
  + This is reflected in the nominal pixel width of the slit, which is given in the =dj= column
  + The slit profile is not rectangular - looks more triangular, or perhaps an ellipse
+ The bias seems to have been removed, but there is a residual signal in the image+slits of 6 to 12 counts, which varies in J but not in I
  + At the J of the slit it looks to be about 9
+ It is hard to tell whether there is anything that should be removed from the spectra
  + But looking at the x-profiles of the line-free parts of the PV image, as compared with the Ha line, I think there is a residual bias of about 3
  + When multiplied by NY=1017, this gives 3051 as the value that should be subtracted from the y-summed profile
+ I have found a better way to extract the slit profile from the image:
  + Sum over a wide window that includes the /entire/ slit profile
  + But then subtract off the average of the two rows above and below this window, multiplied by the window width
  + This is equivalent to interpolating the bg underneath the slit profile
  + It seems to give better results than the previous method
+ [2015-08-22 Sat] The bright and bgrad columns can now be filled in from the calculation [[id:23506DE2-4D98-40C5-961F-4715BE7A1F55][down here]]
  + Note that *bright is the reciprocal of bfac*, which I used in the table for the vertical slits 
  + The bgrad is for a linear E-W gradient correction to the brightnesses
  + I rounded it to 1 decimal place, since it is not that well determined
+ [2015-08-25 Tue] I redid the calculation of the =bright= factors, see [[id:23506DE2-4D98-40C5-961F-4715BE7A1F55][down here]], so we are now using the =corrnorm= column of the last table
+ Also experimented with increasing bgrad from 1.5 to 1.7 for 149, 154, 159

#+header: :var table=horizontal-image-and-fullspec
#+BEGIN_SRC python :return figfile :results file
  from astropy.io import fits
  import numpy as np
  import matplotlib.pyplot as plt
  import seaborn as sns; sns.set()
  sns.set_color_codes()

  nspec = 10
  nx = 625
  figfile = 'image-spec-offsets.pdf'
  xarray = np.arange(nx)
  layout = {'left': 0.05, 'bottom': 0.07, 'right': 0.99, 'top': 0.95,
            'wspace': 0.02, 'hspace': 0.02}
  fig, axgrid = plt.subplots(3, 4, sharex=True, sharey=True, gridspec_kw=layout)
  tweak = 1.0
  for (imid, specid, night, jslit, dj, ishift,
       factor, bright, bgrad), ax in zip(table, axgrid.flat):
      imfile = 'spm{:03d}_ardec.fits'.format(imid)
      specfile = '../{}/reducciones/spm{}_bcr.fits'.format(night, specid)
      jslit = int(float(jslit))
      dj = int(dj)
      ishift = float(ishift)
      factor = float(factor)
      bfac = 1./float(bright)

      imhdu, = fits.open(imfile)
      spechdu, = fits.open(specfile)

      imhdu.data -= 9.0  # remove residual bias
      spechdu.data -= 5.5
      # limits of slit (FWZI)
      j1, j2 = jslit-dj//2, jslit+dj//2
      improfile = imhdu.data[j1:j2, :].sum(axis=0)
      # take average profile either side of the slit
      offprofile = 0.5*(imhdu.data[j1-1, :] + imhdu.data[j2, :])
      # and subtract (multiplied by slit width) to get the pure slit profile
      improfile -= dj*offprofile
      # Now find the gradient correction
      NX = len(improfile)
      x = np.arange(NX)/NX - 0.5
      grad_corr = 1.0 - 1.24*(bgrad - 1.0)*x

      specprofile = spechdu.data.sum(axis=0)
 
      ax.plot(xarray-ishift, (12.0/dj)*bfac*grad_corr*improfile/(1e4*tweak),
              label='image', c='r', lw=2, alpha=0.3)
      ax.plot(xarray, bfac*grad_corr*specprofile/(1e4*factor),
              label='spectrum', c='k', lw=0.6)

      text_pattern = 'pos #{} shift = {:.1f} factor = {:.2f} bright = {:.2f}'
      text = text_pattern.format(imid, ishift, factor/5.5, 1.0/bfac)
      ax.text(300, 0.1, text, ha='center', va='bottom', fontsize=7)

  axgrid[0, 0].legend(fontsize='xx-small', loc='upper left')
  axgrid[0, 0].set_xlim(-80, 640)
  axgrid[0, 0].set_ylim(0.0, 1.5)
  axgrid[-1, 2].set_xlabel('pixel')
  axgrid[1, 0].set_ylabel('intensity')
  fig.suptitle('Alignment and flux calibration of horizontal slits')
  fig.set_size_inches(11, 8.5)
  fig.savefig(figfile)


#+END_SRC

#+RESULTS:
[[file:/Users/will/Dropbox/SPMFEB13/WesternShocks/image-spec-offsets.pdf]]




* Datasets that we will use

** Odd slits that we don't want to forget
+ 2007 Jan
  + Some of the LL1 slits show blueshifted emission at their N end
    + spec060-oiii
    + spec055-ha
    + spec068-ha
    + spec073-ha
  + Unfortunately, most of the slits were put too far South to see this
  + The [O III] slits from 2013 Dec Orion S don't quite go far west enough to reach this, and the same is true of the Orion S slits from 2007
+ 2010 Jan
  + spm078 (Ha, [N II])
  + spm085 ([S II])
  + These are vertical slits to the W of LL2 that help fill in that region to the E of the N ends of the other vertical slits
  + They cross the N wing of the putative big bow
    + Clearly redshifted, helping establish continuity with wing seen in LL2 slits
    + Also we can measure the electron density
  + We also cross a bizarre blue-shited feature to WNW of LL2
    + Looks like a classical triangular bowshock shape in the PV diagram
+ 2013 Feb
  + spm024 (Ha, [N II])
  + This is a horizontal slit across LL2 (just N of star)
  + It shows that a blue emission layer stops just in front of the LL2 bow
+ 2013 Dec
  + There is one extra position just below LL2 - spm116
    + Unfortunately, it is low s/n
+ 2015 Feb
  + 0013 and 0003
  + More horizontal slits in the middle part
  + These are similar to the slits from Dec 2013
** Dec 2013
+ These are in [[file:~/Dropbox/papers/LL-Objects/SPMDIC13/][file:~/Dropbox/papers/LL-Objects/SPMDIC13/]]
+ They are horizontal slits in between LL2 and Orion S
** Feb 2015
+ These are in [[file:~/Dropbox/SPMFEB15/][file:~/Dropbox/SPMFEB15/]]
+ They are horizontal slits in between LL2 and Orion S with a new chip
** Jan 2007 and Feb 2006
:PROPERTIES:
:ID:       CB720DCF-0A33-4C51-9A0B-932030BC0E45
:END:
+ These are the HH 505 observations in [[file:~/Work/SPM2007/Reduced/HH505/slits/reducciones/][file:~/Work/SPM2007/Reduced/HH505/slits/reducciones/]]
+ And also in [[file:~/Work/SPM2005/]] for the older ones
  + Not sure why the folder is called 2005 rather than 2006
  + With reduced versions of these in [[file:~/Work/SPM2007/Reduced/HH505/slits/SPMha/]]
+ They are mainly vertical, but there are a few horizontal slits
*** Original database for vertical slits
+ Taken from [[file:~/Work/SPM2007/Reduced/HH505/slits/reducciones/jw0.csv][jw0.csv]]
+ I have removed the following columns from the table because they were constants:
  + lamrest = 6562.82
  + lamscale = 0.04375213
  + d vel =  2
  + NX = 300
  + NY = 512
  + ufiddle = 0
  + fluxfiddle = 1
|         |         RA |        Dec | dataset | lam0 | helio corr | ypixscale | jcenter | True File           |
|---------+------------+------------+---------+------+------------+-----------+---------+---------------------|
| jw0e068 | -0.6828000 |  -15.91200 |       1 | 6557 |      -13.3 |      0.62 |     316 | spec2062-ha.fits    |
| jw0e043 | -0.4308000 | -0.7920000 |       2 | 6558 |     -21.53 |     0.623 |     182 | spec324-halpha.fits |
| jw0e024 | -0.2388000 |   5.579999 |       2 | 6558 |      -21.5 |     0.623 |     183 | spec319-halpha.fits |
| jw0e022 | -0.2243999 |  -38.23200 |       1 | 6557 |     -12.91 |      0.62 |     317 | spec2038-ha.fits    |
| jw0e004 | -0.0419999 | -0.2160000 |       2 | 6558 |     -20.92 |      0.62 |     200 | spec261-halpha.fits |
| jw0w012 |   0.116399 |   3.671999 |       2 | 6558 |     -21.03 |     0.622 |     196 | spec271-halpha.fits |
| jw0w020 |   0.202799 |   3.960000 |       2 | 6558 |     -21.09 |     0.621 |     193 | spec277-halpha.fits |
| jw0w040 |  0.4019999 |   6.335999 |       2 | 6558 |     -21.15 |     0.622 |     192 | spec282-halpha.fits |
| jw0w056 |  0.5604000 |   6.515999 |       2 | 6558 |     -21.21 |     0.622 |     191 | spec287-halpha.fits |
| jw0w062 |  0.6179999 |   6.551999 |       2 | 6558 |     -21.27 |     0.619 |     189 | spec292-halpha.fits |
| jw0w086 |  0.8628000 |   7.955999 |       2 | 6558 |     -21.32 |     0.621 |     189 | spec297-halpha.fits |
| jw0w092 |  0.9227999 |  -36.21600 |       1 | 6557 |     -12.97 |      0.62 |     316 | spec2042-ha.fits    |
| jw0w122 |   1.220399 |   5.543999 |       2 | 6558 |     -21.39 |     0.619 |     187 | spec304-halpha.fits |
| jw0w143 |   1.433999 |  -35.13600 |       1 | 6557 |     -13.04 |     0.622 |     191 | spec2046-ha.fits    |
| jw0w186 |   1.863599 |  -34.77600 |       1 | 6557 |      -13.1 |     0.621 |     316 | spec2050-ha.fits    |
| jw0w238 |   2.379599 |  -14.68800 |       1 | 6557 |     -13.18 |     0.619 |     316 | spec2054-ha.fits    |
| jw0w300 |   2.996399 |  -16.27200 |       1 | 6557 |     -13.24 |     0.619 |     316 | spec2058-ha.fits    |
| jw0w323 |   3.231599 |   3.887999 |       2 | 6558 |     -21.47 |     0.623 |     184 | spec312-halpha.fits |

+ They seem to be from two different sets:
  + The 20XX-ha ones from Jan 2007
    + There are also 2022, 2076, 2081 that aren't used here
    + 2022 is a horizontal slit
    + 2076 and 2081 are [O III] Orion S slits (why did we never use these?)
  + and the XXX-halpha ones from Feb 2006
    + Unfortunately, I don't have the spmXXX-ardec.fits files for those
    + [X] Write to Teresa and see if she has them
    + An example image+slit is pp260.fits


** Feb 2013
:PROPERTIES:
:dir:      ~/Dropbox/SPMFEB13/WesternShocks
:END:
:LOGBOOK:
CLOCK: [2015-08-22 Sat 17:29]
:END:
+ These are in [[file:~/Dropbox/SPMFEB13/]]
  + Either in [[file:~/Dropbox/SPMFEB13/WesternShocks/]]
  + Or in one of the date-named folders
*** WCS values 
:PROPERTIES:
:ID:       F6ED03C3-EC32-4444-9746-4E3C2A15CD63
:END:
+ These are with a different chip, and with binning of 3x2
+ Here I calculate a similar table to what I did for the [[id:6BFD88F6-71FD-48D3-B8E4-5FF55A3B3D9D][vertical slits]]
+ This time we have dy = 0.52 arcsec
+ The PA is within 0.5 deg of 90
  + But it does vary about 1 deg between the two nights
#+name: horizontal-all-parameters
#+header: :var intable=horizontal-image-and-fullspec
#+BEGIN_SRC python :return table :exports both
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  table = [['image', 'spectrum', 'grating',
            'RA0', 'Dec0', 'dy', 'PA',
            'airmass', 'weight', 'delta'], None]
  for imid, specid, night, jslit, dj, ishift, fac, bright, bgrad in intable:
      fn = 'spm{:03d}_ardec.fits'.format(imid)
      hdu, = fits.open(fn)

      #
      # Find pixel scale along slit and position angle of slit
      #
      dRA_arcsec = hdu.header['CD1_1']*3600*np.cos(np.radians(hdu.header['CRVAL2']))
      dDEC_arcsec = hdu.header['CD2_1']*3600
      dy = np.hypot(dRA_arcsec, dDEC_arcsec)
      PA = np.degrees(np.arctan2(dRA_arcsec, dDEC_arcsec))
      grating = hdu.header['GRATING']
      airmass = hdu.header['AIRMASS']
      #
      # Find the RA and Dec of the spectral slit center
      #

      # Pixel coords of spectrum slit center on image (in FITS 1-based convention)
      # I *think* the shift along the slit goes the other way here
      i0, j0 = 0.5*(1 + hdu.header['NAXIS1']) + ishift, jslit

      # Convert to world coordinates
      wcs = WCS(hdu.header)
      # Crazy packing/unpacking required to use single scalar coords
      (RA0, Dec0), = wcs.all_pix2world([[i0, j0]], 1)

      # Test it by hand using small-patch-of-sky approximation
      c = 1./np.cos(np.radians(-5.42))
      RA1 = (hdu.header['CRVAL1']
             + c*hdu.header['CD1_1']*(i0 - hdu.header['CRPIX1'])
             + c*hdu.header['CD1_2']*(j0 - hdu.header['CRPIX2']))
      Dec1 = (hdu.header['CRVAL2']
              + hdu.header['CD2_1']*(i0 - hdu.header['CRPIX1'])
              + hdu.header['CD2_2']*(j0 - hdu.header['CRPIX2']))
      assert(abs(RA1 - RA0) < 1e-6 )
      assert(abs(Dec1 - Dec0) < 1e-6 )

      #
      # Find total weight factor, combining inter-image factor with the
      # image-to-spectrum factor
      #
      weight = (fac/5.5)*bright

      # Find linear E-W gradient to correct
      delta = -1.24*(bgrad - 1.0)
 
      table.append([imid, int(imid)+1, grating, 
                    '{:.5f}'.format(RA0),
                    '{:.5f}'.format(Dec0),
                    '{:.4f}'.format(dy), '{:.3f}'.format(PA),
                    '{:.2f}'.format(airmass),
                    '{:.2f}'.format(weight), '{:.2f}'.format(delta),
      ])
#+END_SRC

#+RESULTS: horizontal-all-parameters
| image | spectrum | grating |      RA0 |     Dec0 |     dy |     PA | airmass | weight | delta |
|-------+----------+---------+----------+----------+--------+--------+---------+--------+-------|
|   165 |      166 |      12 | 83.62409 | -5.44097 | 0.5248 | 90.496 |    2.05 |   0.78 | -0.50 |
|   169 |      170 |      13 | 83.62424 | -5.43831 | 0.5251 | 90.449 |    2.48 |   0.72 | -0.50 |
|   237 |      238 |      11 | 83.62752 | -5.43613 | 0.5249 | 90.421 |    1.25 |   0.97 | -0.00 |
|   232 |      233 |       9 | 83.62683 | -5.43216 | 0.5243 | 90.399 |    1.25 |   1.05 | -0.00 |
|   226 |      227 |      10 | 83.61872 | -5.42951 | 0.5252 | 90.462 |    1.28 |   1.09 | -0.00 |
|   149 |      150 |       4 | 83.63349 | -5.42399 | 0.5249 | 90.561 |    1.38 |   0.75 | -0.87 |
|   154 |      155 |       5 | 83.63366 | -5.42268 | 0.5247 | 90.579 |    1.51 |   0.81 | -0.87 |
|   159 |      160 |       9 | 83.63375 | -5.42026 | 0.5244 | 90.651 |    1.69 |   0.80 | -0.87 |
|    33 |       34 |      -4 | 83.62033 | -5.41655 | 0.5149 | 89.637 |    1.31 |   0.84 |  0.25 |
|    29 |       30 |      -4 | 83.61937 | -5.41543 | 0.5148 | 89.729 |    1.26 |   0.92 |  0.25 |


*** Inter-position brightness calibration
:PROPERTIES:
:ID:       23506DE2-4D98-40C5-961F-4715BE7A1F55
:END:
+ I have measured brightness in several parts of the image
  + Shown in table below, where *-ed columns are normalised to =226= which seems to be the best
+ There are problems with large-scale brightness gradients in some exposures
  + Particularly E-W
  + I have compared with =219= of the horizontal slits
  + =226= looks fine, but =149= has a clear spurious gradient - falling from W to E
  + =033= and =029= on the other hand have a gradient the other way
  + This is shown in the =W/E= column of the table, which shows the average ratio between the West and East normalizations
  + So we can divide the images into 3 groups:
    + Fine :: 237, 232, 226 (W/E ~= 1)
    + West bias :: 165, 169, 149, 154, 159 (W/E ~= 1.45)
    + East bias :: 033, 029 (W/E ~= 0.8)
| image |  NE |  NW |  SW |  SE |  *NE |  *NW |  *SW |  *SE | Mean          | W/E             |
|-------+-----+-----+-----+-----+------+------+------+------+---------------+-----------------|
|   165 | 507 | 435 | 434 | 160 | 0.69 | 0.87 | 0.82 | 0.54 | 0.73 +/- 0.07 | 1.39 +/- 0.13   |
|   169 | 470 | 426 | 405 | 149 | 0.64 | 0.85 | 0.76 | 0.50 | 0.69 +/- 0.08 | 1.42 +/- 0.10   |
|   237 | 685 | 485 | 491 | 267 | 0.94 | 0.97 | 0.93 | 0.89 | 0.93 +/- 0.02 | 1.04 +/- 6.5e-3 |
|   232 | 700 | 473 | 511 | 272 | 0.96 | 0.94 | 0.96 | 0.91 | 0.94 +/- 0.01 | 1.02 +/- 0.04   |
|   226 | 730 | 502 | 530 | 299 |    1 |    1 |    1 |    1 | 1             | 1               |
|   149 | 490 | 470 | 406 | 138 | 0.67 | 0.94 | 0.77 | 0.46 | 0.71 +/- 0.10 | 1.54 +/- 0.14   |
|   154 | 508 | 466 | 418 | 138 | 0.70 | 0.93 | 0.79 | 0.46 | 0.72 +/- 0.10 | 1.52 +/- 0.19   |
|   159 | 515 | 479 | 436 | 154 | 0.71 | 0.95 | 0.82 | 0.52 | 0.75 +/- 0.09 | 1.46 +/- 0.12   |
|   033 | 579 | 294 | 355 | 238 | 0.79 | 0.59 | 0.67 | 0.80 | 0.71 +/- 0.05 | 0.79 +/- 0.05   |
|   029 | 581 | 307 | 356 | 224 | 0.80 | 0.61 | 0.67 | 0.75 | 0.71 +/- 0.04 | 0.83 +/- 0.07   |
#+TBLFM: $6=$-4/730;f2::$7=$-4/502;f2::$8=$-4/530;f2::$9=$-4/299;f2::$10=vmeane($-4..$-1);f2::$11=vmeane([$7/$6, $8/$9]);f2

+ So to correct the brightness gradients, we use the following:
  + For =149=, we have brightness the same brightness as 226 in the W side, but 0.5 times the brightness in the E side
  + So we will try multiplying by a linear function =(1 + delta*(i - 0.5*NX)/NX)=
  + For this case, we want (1 + 0.5 \delta)/(1 - 0.5 \delta) = 0.5 (remember that i increases from W to E)
    + => 1 + 0.5 \delta = 0.5 - 0.25 \delta => 0.5 = -0.75 \delta => \delta = -2/3
    + This is for a case W/E = 1.54 and it should scale with (W/E - 1)
    + So we get \delta = -1.24 (W/E - 1)
+ The columns "Mean" and "W/E" get copied to columns =bfac= and =bgrad= respectively in the [[id:6CE33437-BC17-49AA-B048-5BACCBB8C99B][table above]]
+ [2015-08-25 Tue] I was not satisfied with the brightness normalizations
  + Some slits, notably 149, 154, 159 seem to be too bright in the combined image
  + So I have remeasured the brightness in a central point (the bright clump just to the W of the nose of the giant bowshock)
  + This gives slightly higher normalizations for those slits
  + *BUT* we also need to account for the affect of the \delta correction on the reference point
    + X0 = NX/2 = 312
    + From the table, the Xpix values of the reference point can be smaller or larger than that
    + So there is a further correction factor dcorr = 1 + \delta (Xpix - X0)/NX, which we have to /multiply/ the brightness norms by
    + I copied the delta values from the table [[id:F6ED03C3-EC32-4444-9746-4E3C2A15CD63][here]]
  + The result is that the corrections are closer to unity for nearly all the slits

| image | bright | Xpix |  norm | delta | dcorr | corrnorm |
|-------+--------+------+-------+-------+-------+----------|
|   165 |    677 |  344 | 0.798 | -0.50 | 0.974 |    0.777 |
|   169 |    646 |  341 | 0.762 | -0.50 | 0.977 |    0.744 |
|   237 |    822 |  328 | 0.969 | -0.00 | 1.000 |    0.969 |
|   232 |    848 |  334 |     1 | -0.00 | 1.000 |    1.000 |
|   226 |    846 |  389 | 0.998 | -0.00 | 1.000 |    0.998 |
|   149 |    673 |  284 | 0.794 | -0.87 | 1.039 |    0.825 |
|   154 |    700 |  280 | 0.825 | -0.87 | 1.045 |    0.862 |
|   159 |    663 |  279 | 0.782 | -0.87 | 1.046 |    0.818 |
|   033 |    694 |  370 | 0.818 |  0.25 | 1.023 |    0.837 |
|   029 |    697 |  386 | 0.822 |  0.25 | 1.030 |    0.847 |
#+TBLFM: $4=$2/848;f3::$6=1 + $-1 ($3 - 312)/625 ;f3::$7=$-3 $-1; f3
** Jan 2010
:LOGBOOK:
CLOCK: [2015-08-16 Sun 18:29]--[2015-08-16 Sun 19:04] =>  0:35
:END:
+ Copied files to [[file:~/Dropbox/SPMJAN10/reducciones/][~/Dropbox/SPMJAN10/reducciones/]]
+ Looking at which ones to use to see if I agree with Tere
*** WCS values and per-slit weighting
:PROPERTIES:
:ID:       6BFD88F6-71FD-48D3-B8E4-5FF55A3B3D9D
:END:
+ Alba's coordinates seem to be for the center of the slit in the image+slit
+ dWav = 0.043752133846283 Ang (2 km/s)
+ dy = 0.6229 arcsec (see table below)
  + range is 0.6211 to 0.6249
+ PA does vary from slit to slit: 3.13 to 3.18
+ In both cases, over 512 pixels, the variation in PA and dy correspond to only a couple of pixels
+ Now we gather all the needed information into the following table
  + We calculate the (RA0, Dec0) of the slit center (taking into account the =jshift= values)
  + We calculate the pixel scale and PA of the slit
  + We calculate a total weight by multiplying together the inter-position and the image-to-spectrum values

#+name: vertical-all-parameters
#+header: :var intable=vertical-image-and-fullspec
#+BEGIN_SRC python :return table :dir ~/Dropbox/SPMJAN10/reducciones/posiciones :exports both
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  table = [['image', 'spectrum', 'RA0', 'Dec0', 'dy', 'PA', 'weight'], None]
  for imid, specid, islit, jshift, fac, bfac in intable:
      fn = 'spm{}-ardec.fits'.format(imid)
      hdu, = fits.open(fn)

      #
      # Find pixel scale along slit and position angle of slit
      #
      dRA_arcsec = hdu.header['CD1_2']*3600*np.cos(np.radians(hdu.header['CRVAL2']))
      dDEC_arcsec = hdu.header['CD2_2']*3600
      dy = np.hypot(dRA_arcsec, dDEC_arcsec)
      PA = np.degrees(np.arctan2(dRA_arcsec, dDEC_arcsec))

      #
      # Find the RA and Dec of the spectral slit center
      #

      # Pixel coords of spectrum slit center on image (in FITS 1-based convention)
      i0, j0 = islit, 0.5*(1 + hdu.header['NAXIS2']) - jshift

      # Convert to world coordinates
      wcs = WCS(hdu.header)
      # Crazy packing/unpacking required to use single scalar coords
      (RA0, Dec0), = wcs.all_pix2world([[i0, j0]], 1)

      # Test it by hand using small-patch-of-sky approximation
      c = 1./np.cos(np.radians(-5.42))
      RA1 = (hdu.header['CRVAL1']
             + c*hdu.header['CD1_1']*(i0 - hdu.header['CRPIX1'])
             + c*hdu.header['CD1_2']*(j0 - hdu.header['CRPIX2']))
      Dec1 = (hdu.header['CRVAL2']
              + hdu.header['CD2_1']*(i0 - hdu.header['CRPIX1'])
              + hdu.header['CD2_2']*(j0 - hdu.header['CRPIX2']))
      assert(abs(RA1 - RA0) < 1e-6 )
      assert(abs(Dec1 - Dec0) < 1e-6 )

      #
      # Find total weight factor, combining inter-image factor with the
      # image-to-spectrum factor
      #
      weight = (fac/4.4)/bfac
 
      table.append([imid, int(imid)+1,
                    '{:.5f}'.format(RA0),
                    '{:.5f}'.format(Dec0),
                    '{:.4f}'.format(dy), '{:.3f}'.format(PA),
                    '{:.4f}'.format(weight),
      ])
#+END_SRC

#+RESULTS: vertical-all-parameters
| image | spectrum |      RA0 |     Dec0 |     dy |    PA | weight |
|-------+----------+----------+----------+--------+-------+--------|
|   202 |      203 | 83.62012 | -5.42575 | 0.6246 | 3.132 | 0.7755 |
|   124 |      125 | 83.61775 | -5.42765 | 0.6222 | 3.379 | 0.4288 |
|   206 |      207 | 83.61646 | -5.42573 | 0.6227 | 3.300 | 0.8803 |
|   128 |      129 | 83.61513 | -5.42787 | 0.6231 | 3.322 | 0.3720 |
|   133 |      134 | 83.61537 | -5.42226 | 0.6231 | 3.259 | 0.7067 |
|   210 |      211 | 83.61386 | -5.42573 | 0.6229 | 3.283 | 0.9794 |
|   137 |      138 | 83.61278 | -5.42226 | 0.6232 | 3.270 | 0.4106 |
|   214 |      215 | 83.61140 | -5.42547 | 0.6247 | 3.132 | 0.8733 |
|   145 |      146 | 83.61005 | -5.42080 | 0.6218 | 3.358 | 0.0877 |
|   248 |      249 | 83.60913 | -5.42673 | 0.6231 | 3.218 | 0.5523 |
|   219 |      220 | 83.60811 | -5.42615 | 0.6227 | 3.331 | 0.9886 |
|   157 |      158 | 83.60713 | -5.42289 | 0.6211 | 3.373 | 0.2354 |
|   236 |      237 | 83.60653 | -5.42631 | 0.6233 | 3.220 | 0.8508 |
|   240 |      241 | 83.60476 | -5.42649 | 0.6236 | 3.256 | 0.6566 |
|   244 |      245 | 83.60297 | -5.42626 | 0.6249 | 3.201 | 0.5350 |
|   252 |      253 | 83.60148 | -5.42675 | 0.6229 | 3.335 | 0.7314 |


**** Offset along slit                                             :noexport:
:PROPERTIES:
:ID:       8685D060-12A9-4E73-B069-11D5315ED8EB
:END:
+ spm124
  + Star position is y = 270.5
  + Same star position in spec125-ha is y = 325
  + Shift of 325 - 270.5 = 54.5 pixels
+ spm137
  + Star position is y = 291
  + In spec138-ha it is y = 351
  + Shift of = 351 - 291 = 60

| spm124 | 270.5 | spec125 |   325 | 54.5 |
| spm202 |   359 | spec203 | 411.5 | 52.5 |
| spm206 |   104 | spec207 |   158 |   54 |
| spm137 |   291 | spec138 |   351 |   60 |
| spm219 | 320.5 | spec220 |   378 | 57.5 |
#+TBLFM: $5=$4 - $2

+ Unfortunately, the offset varies from spectrum to spectrum, which is odd
+ [2015-08-18 Tue] This is now calculated more rigorously [[id:0B8D02D8-4C57-48A1-8F17-6AD60BFA1A7B][above]]

*** Which to use
**** Positions in Alba's set that are acceptable
:PROPERTIES:
:ID:       D625BE5F-BE3F-477A-8059-4B0AFEFEED54
:END:
202, 124, 206, 133(+), 210, 137, 214, 248(+), 219, 236, 240, 244, 252

|  ID |      |  Norm | Inverse | Bright |  Norm | Inverse |
|-----+------+-------+---------+--------+-------+---------|
| 202 | 2083 | 0.875 |   1.143 |   2087 | 0.939 |   1.065 |
| 124 | 1900 | 0.699 |   1.431 |   1879 | 0.726 |   1.377 |
| 206 | 2089 | 0.880 |   1.136 |   2101 | 0.953 |   1.049 |
| 128 | 1558 | 0.372 |   2.688 |    nan |   nan |     nan |
| 133 | 1819 | 0.622 |   1.608 |   1780 | 0.624 |   1.603 |
| 210 | 2192 | 0.979 |   1.021 |   2141 | 0.994 |   1.006 |
| 137 | 1843 | 0.645 |   1.550 |   1913 | 0.760 |   1.316 |
| 214 | 2148 | 0.937 |   1.067 |   2125 | 0.977 |   1.024 |
| 145 | 1372 | 0.193 |   5.181 |    nan |   nan |     nan |
| 248 | 1640 | 0.450 |   2.222 |   1615 | 0.455 |   2.198 |
| 219 | 2214 |     1 |       1 |   2124 | 0.976 |   1.025 |
| 157 | 1324 | 0.148 |   6.757 |    nan |   nan |     nan |
| 236 | 2100 | 0.891 |   1.122 |   2070 | 0.921 |   1.086 |
| 240 | 2143 | 0.932 |   1.073 |   2147 |     1 |       1 |
| 244 | 2080 | 0.872 |   1.147 |   2017 | 0.867 |   1.153 |
| 252 | 1792 | 0.596 |   1.678 |   1792 | 0.637 |   1.570 |
#+TBLFM: $3=($-1 - 1170)/(2214 - 1170);f3::$4=1/$-1;f3::$6=($-1 - 1170)/(2147 - 1170);f3::$7=1/$-1;f3

+ The Inverse column /used/ to agree closely with Alba's values
+ But now it does not, because I realised that the radec images have not had the bias subtracted!
+ [2015-08-17 Mon] Dones it again to include more positions - new version is in columns 2 to 4
+ Note that values from this table are used [[id:0B8D02D8-4C57-48A1-8F17-6AD60BFA1A7B][above]] to calculate the slit normalizations

**** Positions in Alba's set that are bad
128(+), 101, 145, 157, 173
***** Rehabilitation of some of these positions
+ From my experience with the image-spectrum calibration, there is often a big difference between the quality of the image and that of hte spectrum
+ So we shouldn't rule out a position, just based on a poor image
+ Worth saving:
  + 128 :: slots in right next to 133
  + 145 :: goes just before 248
  + 157 :: goes before 236
+ Still terrible: 101 (no spectrum), 173 (just bad)
**** Positions over to the NE
spm078, spm085
**** Other positions omitted ny Alba
+ spm142 - no spectrum
+ spm150 - ha spec exists, but looks weak and Tere says no
+ spm154 - no spectrum
+ spm161 - same as 150 but even worse
+ spm224 - has sii spec but no ha
+ spm231 - no spectrum
*** Message from Teresa [2010-02-18 Thu]
: Acabo de terminar las reducciones de las observaciones de Enero. Al
: final nos quedamos con 16 posiciones, eliminé 7 posiciones
: porque las observé con muchas nubes por lo que no obtuve buenos
: resultados, lo bueno fué que en la siguiente noche pude obtener
: estas posiciones o cercanas a ellas. De cualquier manera las reduje
: por si decidimos incluirlas.
: 
: Las reducciones estan en: /fs/tungol/home0/LEEDS/teresa/SPMENE10/reducciones
: 
: incluyo también la bitacora en pdf. Las posiciones que no tomé en
: cuenta para hacer los mapas fueron:
: 
: No incluidas        Slit cercana o casi en la misma posición que la anterior
: spm128                   spm133 (se ve mucho mejor que spm128)
: spm231                   spm248
: spm150                   spm224
: spm157                   spm236
: spm173                   spm252
: spm161
: spm129                   spm133
: 
: Hice la astrometría, las imagen+slit corregidas están en el directorio
: llamado "posiciones" adentro del direcotorio "reducciones"
: También hice dos posiciones al Este de la región observada. Están la
: oeste de HH 505, las observé en Halpha y [S II]:
: spm078 (image+slit), spm085 (image+slit). Podemos obtener la densidad
: en estas posiciones.
: 
: Para la posición de spm219 tomé los espectros en Ha (spm220,221),
: [SII] (spm225,226) y [OIII] (spm228,229)
: Los espectros corregidos en longitud de onda los puse en:
: 
: /fs/tungol/home0/LEEDS/teresa/SPMENE10/observaciones/SPM{ha,nii,siis,siil,oiii}
: 
: Después de hacer todo el trabajo hice el primer intento de los mapas
: de momentos de Halpha y [NII] :D a ver que te parecen,
: todos los archivos  estan en
: /fs/tungol/home0/LEEDS/teresa/SPMENE10/observaciones:
: 
: {ha,nii}_{-100-040,-060+000,+000+060,+060+140,-020+040).wisomom-sum-fake.fits
: 
: haciendo un smooth:
: 
: {ha,nii}_{-100-040,-060+000,+000+060,+060+140,-020+040).wisomom-sum-smooth2d.fits
: 
: Hice también en rangos de 20 km/s para poder hacer los mapas a color
: (no me quedarón también como a ti!)
: que son los que anexo a este email.

* Making spectral maps
+ The plan is to start with a fine orthogonal RA-dec grid
  + Place all the slits onto there by looping over slit pixels and painting all the grid pixels that fall in each
  + Leave grid pixels transparent where no slit falls
+ Then do the multi-resolution thing
  + As in [[id:E1B9B2C8-1CDE-407B-B9FE-4E31144F328C][Rebinning the maps]] in orion tsquared notes
  + Which makes use of [[file:~/Work/RubinWFC3/Tsquared/rebin_utils.py][file:~/Work/RubinWFC3/Tsquared/rebin_utils.py]]
+ This should give a map with all the holes filled in at lower resolution
+ To start with we will work with the original spectra that I already have
  + Later, we should switch to the bg-subtracted and brightness-corrected ones that Alba has
** Define the output grid
+ 1 arcsec is
  + 2.778e-4 deg declination
  + 2.765e-4 deg RA
+ We will try a grid with 0.5 arcsec pixels that is 1024 x 1024, which should comfortably enclose all of the slits
+ AR reference of the horizontal slits is 83.6158 +/- 0.0019
  + AR range of vertical slits is 83.6016 to 83.6205: 68 cos(-5.4150) = 67.7 arcsec
+ Dec reference of vertical slits is -5.4150 +/- 0.0006
  + Dec range of horizontal slits is -5.4409 to -5.4155 = 91.44 arcsec
  + Actually Dec value of the vertical slits is a bit lower now that I have taken into account the image-spectrum shift 
+ So we use
  + CRPIX1 = CRPIX2 = 256.5
  + CRVAL1 = 83.61, CRVAL2 = -5.423
  + CDELT1 = -0.5/3600, CDELT2 = 0.5/3600
  + PC1_1 = 1.0, PC1_2 = 0.0
  + PC2_1 = 0.0, PC2_2 = 1.0
+ Note that the WCS matrix should be given in arcdegrees - the translation to degrees of RA is done automatically (and it doesn't matter much anyway, since we are near the equator)

** Test with the velocity-integrated emission
:PROPERTIES:
:dir:      ~/Dropbox/SPMJAN10/reducciones
:ID:       23C29E96-4471-454E-A463-D365731119C0
:END:
:LOGBOOK:
- Note taken on [2015-08-25 Tue 11:41] \\
  That did not help at all - we definitely need to rehabilitate slit 248
- Note taken on [2015-08-25 Tue 11:03] \\
  Added the noisy slit 145 to the list of vertical ones to drop.  I am not convinced that this will work out, since with 248 and 145 gone there is a big gap.  It may be possible to rehabilitate 248 with a bit of work - it will probably need its brightness increasing
:END:

Some positions are a bit problematic - try missing them out: 
#+name: positions-to-drop
+ 145


#+name: create-slit-map
#+header: :var ignore=positions-to-drop
#+header: :var vtab=vertical-all-parameters
#+header: :var vmin=-1000 vmax=1000 label="sum"
#+BEGIN_SRC python :results output
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  #
  # First set up WCS for the output image
  #

  NX, NY = 1024, 1024
  dRA, dDec = -0.5/3600., 0.5/3600.
  RA0, Dec0 = 83.61, -5.423
  w = WCS(naxis=2)
  w.wcs.crpix = [0.5*(1 + NX), 0.5*(1 + NY)]
  w.wcs.cdelt = [dRA, dDec]
  w.wcs.crval = [RA0, Dec0]
  w.wcs.ctype = ['RA---TAN', 'DEC--TAN']

  outimage = np.zeros((NY, NX))
  outweights = np.zeros((NY, NX))

  # Create world coord arrays for output image
  II, JJ = np.meshgrid(np.arange(NX), np.arange(NY))
  RA, Dec = w.all_pix2world(II, JJ, 0)

  slit_width = 2.0                # width in arcsec of 150 micron slit

  light_speed = 2.99792458e5
  wavrest = 6562.7910
  heliocentric_correction = 0.0   # I need to find this
  vmin, vmax = float(vmin), float(vmax)
  for imid, specid, ra0, dec0, dy, PA, weight in vtab:
      if int(imid) in ignore:
          continue  # drop some positions
      # Unpack floats from strings in table row
      ra0, dec0, dy, PA, weight = [float(_) for _ in (ra0, dec0, dy, PA, weight)]
      # Open H alpha slit spectrum
      spechdu, = fits.open('spec{}-ha.fits'.format(specid))

      # Create velocity array from header
      nwav, k0, wav0, dwav = [spechdu.header[kwd+'1']
                              for kwd in ('NAXIS', 'CRPIX', 'CRVAL', 'CDELT')]
      wavs = wav0 + (np.arange(nwav) - k0 + 1)*dwav
      vels = heliocentric_correction + light_speed*(wavs - wavrest)/wavrest
      # Find indices corresponding to velocity limits
      k1 = (vels < vmin).sum()
      k2 = (vels <= vmax).sum()
      print('Velocities used', vels[k1:k2])

      # Sum spectrum over all wavelengths
      profile = spechdu.data[:, k1:k2].sum(axis=1)

      # Transform output grid coords into slit frame offsets in arcsec
      # XX, YY are intermediate offset coordinates along RA, Dec axes
      XX = 3600*(RA - ra0)*np.cos(np.radians(Dec))
      YY = 3600*(Dec - dec0)
      # Precalculate geometric factors for rotation to slit frame
      c, s = np.cos(np.radians(PA)), np.sin(np.radians(PA))
      # X is ordinate perpendicular to slit
      X = XX*c - YY*s
      # Y is ordinate along slit
      Y = YY*c - XX*s

      # Mask for all output pixels that fall in the slit
      slitmask = abs(X) <= 0.5*slit_width
      # cycle over all slit y pixels
      for j, intensity in enumerate(profile):
          # Offset from slit center
          y = (j - 255.5)*dy
          # Mask for output pixels that fall in this slit pixel
          pixmask = slitmask & (abs(Y - y) <= 0.5*dy)
          # Fill in the output intensity and weight arrays
          outimage[pixmask] += intensity
          outweights[pixmask] += weight

  # Save everything as different images in a single fits file:
  # 1. The sum of the raw slits 
  # 2. The weights
  # 3. The slits normalized by the weights
  fits.HDUList([
      fits.PrimaryHDU(),
      fits.ImageHDU(header=w.to_header(), data=outimage, name='slits'),
      fits.ImageHDU(header=w.to_header(), data=outweights, name='weight'),
      fits.ImageHDU(header=w.to_header(), data=outimage/outweights, name='scaled'),
      ]).writeto('all-vert-{}.fits'.format(label), clobber=True)


#+END_SRC

#+RESULTS: create-slit-map
#+begin_example
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
Velocities used [-264.5365553  -262.53793006 -260.53930481 -258.54067957 -256.54205433
 -254.54342909 -252.54480385 -250.54617861 -248.54755336 -246.54892812
 -244.55030288 -242.55167764 -240.5530524  -238.55442716 -236.55580191
 -234.55717667 -232.55855143 -230.55992619 -228.56130095 -226.56267571
 -224.56405046 -222.56542522 -220.56679998 -218.56817474 -216.5695495
 -214.57092426 -212.57229901 -210.57367377 -208.57504853 -206.57642329
 -204.57779805 -202.57917281 -200.58054756 -198.58192232 -196.58329708
 -194.58467184 -192.5860466  -190.58742136 -188.58879611 -186.59017087
 -184.59154563 -182.59292039 -180.59429515 -178.59566991 -176.59704466
 -174.59841942 -172.59979418 -170.60116894 -168.6025437  -166.60391845
 -164.60529321 -162.60666797 -160.60804273 -158.60941749 -156.61079225
 -154.612167   -152.61354176 -150.61491652 -148.61629128 -146.61766604
 -144.6190408  -142.62041555 -140.62179031 -138.62316507 -136.62453983
 -134.62591459 -132.62728935 -130.6286641  -128.63003886 -126.63141362
 -124.63278838 -122.63416314 -120.6355379  -118.63691265 -116.63828741
 -114.63966217 -112.64103693 -110.64241169 -108.64378645 -106.6451612
 -104.64653596 -102.64791072 -100.64928548  -98.65066024  -96.652035
  -94.65340975  -92.65478451  -90.65615927  -88.65753403  -86.65890879
  -84.66028355  -82.6616583   -80.66303306  -78.66440782  -76.66578258
  -74.66715734  -72.6685321   -70.66990685  -68.67128161  -66.67265637
  -64.67403113  -62.67540589  -60.67678065  -58.6781554   -56.67953016
  -54.68090492  -52.68227968  -50.68365444  -48.6850292   -46.68640395
  -44.68777871  -42.68915347  -40.69052823  -38.69190299  -36.69327775
  -34.6946525   -32.69602726  -30.69740202  -28.69877678  -26.70015154
  -24.7015263   -22.70290105  -20.70427581  -18.70565057  -16.70702533
  -14.70840009  -12.70977484  -10.7111496    -8.71252436   -6.71389912
   -4.71527388   -2.71664864   -0.71802339    1.28060185    3.27922709
    5.27785233    7.27647757    9.27510281   11.27372806   13.2723533
   15.27097854   17.26960378   19.26822902   21.26685426   23.26547951
   25.26410475   27.26272999   29.26135523   31.25998047   33.25860571
   35.25723096   37.2558562    39.25448144   41.25310668   43.25173192
   45.25035716   47.24898241   49.24760765   51.24623289   53.24485813
   55.24348337   57.24210861   59.24073386   61.2393591    63.23798434
   65.23660958   67.23523482   69.23386006   71.23248531   73.23111055
   75.22973579   77.22836103   79.22698627   81.22561151   83.22423676
   85.222862     87.22148724   89.22011248   91.21873772   93.21736296
   95.21598821   97.21461345   99.21323869  101.21186393  103.21048917
  105.20911441  107.20773966  109.2063649   111.20499014  113.20361538
  115.20224062  117.20086586  119.19949111  121.19811635  123.19674159
  125.19536683  127.19399207  129.19261731  131.19124256  133.1898678
  135.18849304  137.18711828  139.18574352  141.18436877  143.18299401
  145.18161925  147.18024449  149.17886973  151.17749497  153.17612022
  155.17474546  157.1733707   159.17199594  161.17062118  163.16924642
  165.16787167  167.16649691  169.16512215  171.16374739  173.16237263
  175.16099787  177.15962312  179.15824836  181.1568736   183.15549884
  185.15412408  187.15274932  189.15137457  191.14999981  193.14862505
  195.14725029  197.14587553  199.14450077  201.14312602  203.14175126
  205.1403765   207.13900174  209.13762698  211.13625222  213.13487747
  215.13350271  217.13212795  219.13075319  221.12937843  223.12800367
  225.12662892  227.12525416  229.1238794   231.12250464  233.12112988
  235.11975512  237.11838037  239.11700561  241.11563085  243.11425609
  245.11288133  247.11150657  249.11013182  251.10875706  253.1073823
  255.10600754  257.10463278  259.10325802  261.10188327  263.10050851
  265.09913375  267.09775899  269.09638423  271.09500947  273.09363472
  275.09225996  277.0908852   279.08951044  281.08813568  283.08676092
  285.08538617  287.08401141  289.08263665  291.08126189  293.07988713
  295.07851238  297.07713762  299.07576286  301.0743881   303.07301334
  305.07163858  307.07026383  309.06888907  311.06751431  313.06613955
  315.06476479  317.06339003  319.06201528  321.06064052  323.05926576
  325.057891    327.05651624  329.05514148  331.05376673  333.05239197]
#+end_example

#+RESULTS:

+ The first image in the file is what can be used to combine with more data, for instance the horizontal slits
+ The third image is what should be used in the rebinning process (together with the second image, the weights)

This shows the scaled image in ds9
#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-vert-sum.fits[3]
#+END_SRC


** Repeat the spectral map for the horizontal slits
:PROPERTIES:
:dir:      ~/Dropbox/SPMFEB13/WesternShocks
:ID:       60833550-A462-4F18-86DE-895625FF3E7A
:END:
+ We can't use the same program as for the vertical slits because the table has extra columns
  + In particular, it has the \delta parameter to account for the linear brightness correction along the slit
+ Also, the spectra are organised differently (wavelength along y-axis)
+ So we need to copy and modify the program
+ [3/3] Other changes to the program:
  + [X] Remove hardcoding of slit length in pixels (now NY)
  + [X] Correct for \delta factor
    + We should actually apply this to the weights, which would no longer be constant for the entire slit
    + Except, that I don't understand the reason for the gradient correction
    + But I have done it like that anyhow
  + [X] change sign of offset along slit

#+name: create-horizontal-slit-map
#+header: :var htab=horizontal-all-parameters
#+header: :var vmin=-1000 vmax=1000 label="sum"
#+BEGIN_SRC python :results output
  import numpy as np
  from astropy.io import fits
  from astropy.wcs import WCS

  #
  # First set up WCS for the output image
  #

  NX, NY = 1024, 1024
  dRA, dDec = -0.5/3600., 0.5/3600.
  RA0, Dec0 = 83.61, -5.423
  w = WCS(naxis=2)
  w.wcs.crpix = [0.5*(1 + NX), 0.5*(1 + NY)]
  w.wcs.cdelt = [dRA, dDec]
  w.wcs.crval = [RA0, Dec0]
  w.wcs.ctype = ['RA---TAN', 'DEC--TAN']

  outimage = np.zeros((NY, NX))
  outweights = np.zeros((NY, NX))

  # Create world coord arrays for output image
  II, JJ = np.meshgrid(np.arange(NX), np.arange(NY))
  RA, Dec = w.all_pix2world(II, JJ, 0)

  slit_width = 2.0                # width in arcsec of 150 micron slit

  light_speed = 2.99792458e5
  wavrest = 6562.7910
  heliocentric_correction = 0.0   # I need to find this
  vmin, vmax = float(vmin), float(vmax)
  for imid, specid, _, ra0, dec0, dy, PA, _, weight, delta in htab:
      # Unpack floats from strings in table row
      ra0, dec0, dy, PA, weight, delta = [float(_) for _ in (ra0, dec0, dy, PA, weight, delta)]
      # Open H alpha slit spectrum
      spechdu, = fits.open('spec{:03d}-ha.fits'.format(specid))

      # Create velocity array from header
      nwav, k0, wav0, dwav = [spechdu.header[kwd+'2']
                              for kwd in ('NAXIS', 'CRPIX', 'CRVAL', 'CDELT')]
      wavs = wav0 + (np.arange(nwav) - k0 + 1)*dwav
      vels = heliocentric_correction + light_speed*(wavs - wavrest)/wavrest
      # Find indices corresponding to velocity limits
      k1 = (vels < vmin).sum()
      k2 = (vels <= vmax).sum()
      # print('Velocities used', vels[k1:k2])

      # Sum spectrum over all wavelengths
      profile = spechdu.data[k1:k2, :].sum(axis=0)

      NY = spechdu.header['NAXIS1']
      yy = np.arange(NY)/NY - 0.5
      grad_corr = 1.0 + delta*yy


      # Transform output grid coords into slit frame offsets in arcsec
      # XX, YY are intermediate offset coordinates along RA, Dec axes
      XX = 3600*(RA - ra0)*np.cos(np.radians(Dec))
      YY = 3600*(Dec - dec0)
      # Precalculate geometric factors for rotation to slit frame
      c, s = np.cos(np.radians(PA)), np.sin(np.radians(PA))
      # X is ordinate perpendicular to slit
      X = XX*c - YY*s
      # Y is ordinate along slit
      Y = -(YY*c - XX*s)

      # Mask for all output pixels that fall in the slit
      slitmask = abs(X) <= 0.5*slit_width
      # cycle over all slit y pixels
      for j, (intensity, gcorr) in enumerate(zip(profile, grad_corr)):
          # Offset from slit center
          y = (j - 0.5*(NY-1))*dy
          # Mask for output pixels that fall in this slit pixel
          pixmask = slitmask & (abs(Y - y) <= 0.5*dy)
          # Fill in the output intensity and weight arrays
          outimage[pixmask] += intensity
          outweights[pixmask] += weight/gcorr

  # Save everything as different images in a single fits file:
  # 1. The sum of the raw slits 
  # 2. The weights
  # 3. The slits normalized by the weights
  fits.HDUList([
      fits.PrimaryHDU(),
      fits.ImageHDU(header=w.to_header(), data=outimage, name='slits'),
      fits.ImageHDU(header=w.to_header(), data=outweights, name='weight'),
      fits.ImageHDU(header=w.to_header(), data=outimage/outweights, name='scaled'),
      ]).writeto('all-horiz-{}.fits'.format(label), clobber=True)


#+END_SRC

#+RESULTS: create-horizontal-slit-map

This shows the scaled image in ds9
#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-horiz-sum.fits[3]
#+END_SRC


** TODO Correction for heliocentric velocity
+ [2015-08-23 Sun] I haven't done this yet
+ I have it in a table for the 2013 observations, but need to calculate it for the others
+ Plan is to base on what I did before:
  + For Keck spectra [[id:1772B088-D07A-4228-95D4-14F9C3529EC1][here]]
  + And for HST [[id:5D00EFD4-5F66-4075-B89D-1AFCF3A73B70][here]]

** Try to use different velocity ranges
:PROPERTIES:
:dir:      ~/Dropbox/SPMJAN10/reducciones
:END:

+ It would be more efficient to do these all at the sane time, but for the time being I will do them separately
+ Although the noisiest slit looked fine on the integrated maps, it makes a mess of the velocity channels where the emission is faint

#+name: noisy-slits
+ 145

#+call: create-slit-map(vmin=-200, vmax=-50, label="blue", ignore=noisy-slits) :results silent

#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-vert-blue.fits[3]
#+END_SRC

+ Try some blue wing 20 km/s channels

#+call: create-slit-map(vmin="-40", vmax="-20", label="b30", ignore=noisy-slits) :results silent
#+call: create-slit-map(vmin="-60", vmax="-40", label="b50", ignore=noisy-slits) :results silent
#+call: create-slit-map(vmin="-80", vmax="-60", label="b70", ignore=noisy-slits) :results silent

+ And some line core channels
#+call: create-slit-map(vmin="20", vmax="40", label="r30", ignore=noisy-slits) :results silent
#+call: create-slit-map(vmin="0", vmax="20", label="r10", ignore=noisy-slits) :results silent
#+call: create-slit-map(vmin="-20", vmax="0", label="b10", ignore=noisy-slits) :results silent


#+BEGIN_SRC sh :results silent
xpaset -p ds9 rgb new
xpaset -p ds9 fits $PWD/all-vert-b30.fits[3]
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/all-vert-b50.fits[3]
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/all-vert-b70.fits[3]
#+END_SRC

#+BEGIN_SRC sh :results silent
xpaset -p ds9 rgb new
xpaset -p ds9 fits $PWD/all-vert-r30.fits[3]
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 50000
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/all-vert-r10.fits[3]
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 15000
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/all-vert-b10.fits[3]
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 6000
#+END_SRC


#+call: multi-smooth(label="b30") :results silent 
#+call: multi-smooth(label="b50") :results silent 
#+call: multi-smooth(label="b70") :results silent 

#+call: multi-smooth(label="r30") :results silent 
#+call: multi-smooth(label="r10") :results silent 
#+call: multi-smooth(label="b10") :results silent 

#+BEGIN_SRC sh :results silent
xpaset -p ds9 rgb new
xpaset -p ds9 fits $PWD/all-vert-b30-bin016.fits['scaled']
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/all-vert-b50-bin016.fits['scaled']
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/all-vert-b70-bin016.fits['scaled']
#+END_SRC


+ Display the multigrid smoothed channel maps
#+BEGIN_SRC sh :results silent
xpaset -p ds9 rgb new
xpaset -p ds9 fits $PWD/all-vert-b30-multibin.fits
xpaset -p ds9 scale linear
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/all-vert-b50-multibin.fits
xpaset -p ds9 scale linear
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/all-vert-b70-multibin.fits
xpaset -p ds9 scale linear
#+END_SRC

#+BEGIN_SRC sh :results silent
xpaset -p ds9 rgb new
xpaset -p ds9 fits $PWD/all-vert-r30-multibin.fits
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 50000
xpaset -p ds9 rgb green
xpaset -p ds9 fits $PWD/all-vert-r10-multibin.fits
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 15000
xpaset -p ds9 rgb blue
xpaset -p ds9 fits $PWD/all-vert-b10-multibin.fits
xpaset -p ds9 scale linear
xpaset -p ds9 scale limits 0 6000
#+END_SRC




** Combine both the horizontal and vertical slits
:PROPERTIES:
:dir:      ~/Dropbox/OrionWest
:END:

#+BEGIN_SRC python
from astropy.io import fits
scale = 1.8
horiz = fits.open('../SPMFEB13/WesternShocks/all-horiz-sum.fits')
vert = fits.open('../SPMJAN10/reducciones/all-vert-sum.fits')
horiz['slits'].data += vert['slits'].data/scale
horiz['weight'].data += vert['weight'].data
horiz['scaled'].data = horiz['slits'].data/horiz['weight'].data
horiz.writeto('all-slits-sum.fits', clobber=True)
#+END_SRC

#+RESULTS:
: None

#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-slits-sum.fits[3]
#+END_SRC


+ Note that we have to explicitly set the working directory for this to work
  + It is not enough that =dir= is set for this subtree
#+call: multi-smooth[:dir .](label="sum", slits="slits")

#+RESULTS:
: Saving all-slits-sum-bin001.fits
: Saving all-slits-sum-bin002.fits
: Saving all-slits-sum-bin004.fits
: Saving all-slits-sum-bin008.fits
: Saving all-slits-sum-bin016.fits
: Saving all-slits-sum-bin032.fits


#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-slits-sum-bin032.fits['scaled']
#+END_SRC


Now we do the multiresolution maps for the combined data.  For the moment, just the spectrally integrated emission

#+name: just-integrated
+ sum

We need to extend the largest pixels used up to 32x32 in order to fill in all the big gaps between the horizontal slits 
#+name: minweights-extended
|   1 |   2 |   4 |   8 |  16 |  32 |
| 2.0 | 2.0 | 2.0 | 2.0 | 2.0 | 4.0 |

We can use the =imscale= parameter to adjust the resolution of the map.  If =imscale= is larger then we need a higher total flux for a pixel to be accepted, so we will end up with larger pixels 

#+call: multigrid-combine[:dir .](labels=just-integrated, slits="slits", wtab=minweights-extended, imscale=200000)

#+RESULTS:
: .+..+..+..+..+..+..+..+..+..+..+..+.
: Channel sum
: Binning 32 - pixels used 217088
: Binning 16 - pixels used 183296
: Binning 8 - pixels used 76224
: Binning 4 - pixels used 6448
: Binning 2 - pixels used 16
: Binning 1 - pixels used 0

#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-slits-sum-multibin.fits
#+END_SRC

* The multigrid smoothing method
:PROPERTIES:
:dir:      ~/Dropbox/SPMJAN10/reducciones
:END:

#+name: multi-smooth
#+BEGIN_SRC python :var label="sum" :var slits="vert" :results output
  import sys
  sys.path.append('/Users/will/Work/RubinWFC3/Tsquared')
  from rebin_utils import downsample, oversample
  from astropy.io import fits

  nlist = [1, 2, 4, 8, 16, 32]

  infile = 'all-{}-{}.fits'.format(slits, label)

  hdulist = fits.open(infile)
  hdr = hdulist['scaled'].header
  im = hdulist['scaled'].data
  w = hdulist['weight'].data
  m = w > 0.0

  for n in nlist:
      im[~m] = 0.0
      outfile = infile.replace('.fits', '-bin{:03d}.fits'.format(n))
      print('Saving', outfile)
      # Save both the scaled image and the weights, but at the full resolution
      fits.HDUList([
          fits.PrimaryHDU(),
          fits.ImageHDU(data=oversample(im, n), header=hdr, name='scaled'),
          fits.ImageHDU(data=oversample(w, n), header=hdr, name='weight'),
      ]).writeto(outfile, clobber=True)
      # Now do the rebinning by a factor of two
      [im,], m, w = downsample([im,], m, weights=w)

#+END_SRC

#+RESULTS: multi-smooth
: Saving all-vert-sum-bin001.fits
: Saving all-vert-sum-bin002.fits
: Saving all-vert-sum-bin004.fits
: Saving all-vert-sum-bin008.fits
: Saving all-vert-sum-bin016.fits
: Saving all-vert-sum-bin032.fits

#+BEGIN_SRC sh :results silent
xpaset -p ds9 fits $PWD/all-vert-sum-bin016.fits['scaled']
#+END_SRC

+ Unfortunately, the weights increase a lot with the binning - more than they ought to.
+ The problem is that the pixels at the finest grid levels are not independent, since many of them come from the same pixel of the slit spectrum
+ However, the algorithm does not know this and so adds them up when it rebins to the next coarser grid
+ This will be a problem if we want to combine the different levels and impose a minimum weight
  + An easy solution would be to have the minimum weight vary per level

#+BEGIN_SRC python :results silent
  from astropy.io import fits
  import numpy as np
  nlist = [1, 2, 4, 8, 16]
  minweights = [0.5, 1.0, 2.0, 2.0, 2.0, 2.0]
  outim = np.zeros((1024, 1024))
  for n, minw in reversed(list(zip(nlist, minweights))):
      fn = 'all-vert-sum-bin{:03d}.fits'.format(n)
      hdulist = fits.open(fn)
      im = hdulist['scaled'].data
      hdr = hdulist['scaled'].header
      w = hdulist['weight'].data
      m = w*im >= minw*1e5
      outim[m] = im[m]
  fits.PrimaryHDU(header=hdr, data=outim).writeto('all-vert-sum-multibin.fits', clobber=True)
#+END_SRC


And here is a version for the velocity channels

#+name: vel-channels
+ r30
+ r10
+ b10
+ b30
+ b50
+ b70


#+name: minweights-standard
|   1 |   2 |   4 |   8 |  16 |
| 0.5 | 1.0 | 2.0 | 2.0 | 2.0 |

#+name: multigrid-combine
#+header: :var labels=vel-channels slits="vert" wtab=minweights-standard imscale=1000
#+BEGIN_SRC python :results output
  from astropy.io import fits
  import numpy as np
  nlist, minweights = wtab
  outim = np.zeros((1024, 1024))
  for label in labels:
      print('.+.'*12)
      print('Channel', label)
      for n, minw in reversed(list(zip(nlist, minweights))):
          fn = 'all-{}-{}-bin{:03d}.fits'.format(slits, label, n)
          hdulist = fits.open(fn)
          im = hdulist['scaled'].data
          hdr = hdulist['scaled'].header
          w = hdulist['weight'].data
          m = w*im >= minw*imscale
          print('Binning', n, '- pixels used', m.sum())
          outim[m] = im[m]
      fits.PrimaryHDU(header=hdr, data=outim).writeto(
          'all-{}-{}-multibin.fits'.format(slits, label), clobber=True)
#+END_SRC

#+RESULTS: multigrid-combine
#+begin_example
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel r30
Binning 16 - pixels used 101120
Binning 8 - pixels used 86400
Binning 4 - pixels used 62144
Binning 2 - pixels used 44500
Binning 1 - pixels used 35532
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel r10
Binning 16 - pixels used 100608
Binning 8 - pixels used 86144
Binning 4 - pixels used 61968
Binning 2 - pixels used 44408
Binning 1 - pixels used 35471
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel b10
Binning 16 - pixels used 99840
Binning 8 - pixels used 82112
Binning 4 - pixels used 39872
Binning 2 - pixels used 21452
Binning 1 - pixels used 6119
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel b30
Binning 16 - pixels used 98560
Binning 8 - pixels used 72832
Binning 4 - pixels used 22928
Binning 2 - pixels used 8888
Binning 1 - pixels used 2342
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel b50
Binning 16 - pixels used 98048
Binning 8 - pixels used 69888
Binning 4 - pixels used 20272
Binning 2 - pixels used 7752
Binning 1 - pixels used 3025
.+..+..+..+..+..+..+..+..+..+..+..+.
Channel b70
Binning 16 - pixels used 95744
Binning 8 - pixels used 61568
Binning 4 - pixels used 12800
Binning 2 - pixels used 3424
Binning 1 - pixels used 1135
#+end_example


* T diagnostics from linewidths
+ We could repeat what we did for the Teresa Atlas Paper, but we only have one slit with [O III] spectrum
+ For the jet knots, assuming they are kinematically homogeneous, we should be able to measure the T from
+ Compact knot in slit spec166
  + FWHM in [N II] = 12.76 km/s
  + FWHM in Ha = 23.77 km/s
  + => thermal FWHM = sqrt((23.77**2 - 12.76**2) (14/13)) = 20.8 km/s
  + So basically 1e4 K, which is not surprising
* The big bowshock
+ There is a giant, possibly double, possibly triple bow
+ It's N wing crosses LL2, and is red-shifted
  + And has measured proper motion
+ The nose looks red-shifted too
+ It would be good to get proper motions of the nose
* Coordinates of the slits
+ Data received from Alba [2015-08-11 Tue]

** Description from Alba
: Todos los datos están en:
: /fs/posgrado01/other0/albafm/WesternShocks/3.CuboWS/0.Datos
: Diferencio entre especros e imagenes y luego entre los del 2010 (verticales) y
: 2013 (horizontales)
: Todos los espectros tienen la sustraccion del continuo (*nc*) y los del 2010
: además tiene el factor de calidad (aplicado entre ellos y a todos los de esa
: campaña de observacion, son *cc*fits)
: 
: Por ultimo te adjunto tabla las coordenadas de cada posicion de las rendijas.



** Brightness correction factors
+ The 2010 data in =3.CuboWS/0.Datos= are =.nc.cc.= have already had this applied
+ The prior stage (just =.nc.=) is in =2.Datos2010/1.PreparandoDatos/1.SustraccionContinuo=
+ The factors are in [[file:/ssh:nil:/fs/posgrado01/other0/albafm/WesternShocks/2.Datos2010/1.PreparandoDatos/2.IgualandoCalidad/intensidades.dat][intensidades.dat]]
  + Transposed version of this table below
  + The factors multiply the observed intensities
+ The 2013 data don't seem to have any brightness correction

| Imagen | I. original | I. corregida |  Factor |
|--------+-------------+--------------+---------|
|    101 |     2149.52 |      2180.37 | 1.01435 |
|    124 |     1936.37 |      2180.37 | 1.12601 |
|    128 |     1567.50 |      2180.37 | 1.39099 |
|    133 |     1814.61 |      2180.37 | 1.20156 |
|    137 |     1939.18 |      2180.37 | 1.12438 |
|    145 |     1361.85 |      2180.37 | 1.60103 |
|    157 |     1323.03 |      2180.37 | 1.64801 |
|    173 |     1249.18 |      2180.37 | 1.74544 |
|    202 |     2170.67 |      2180.37 | 1.00447 |
|    206 |     2169.70 |      2180.37 | 1.00492 |
|    210 |     2211.48 |      2180.37 | 0.98594 |
|    214 |     2231.37 |      2180.37 | 0.97715 |
|    219 |     2226.34 |      2180.37 | 0.97935 |
|    236 |     2184.94 |      2180.37 | 0.99791 |
|    240 |     2186.48 |      2180.37 | 0.99720 |
|    244 |     2150.31 |      2180.37 | 1.01398 |
|    248 |     1632.71 |      2180.37 | 1.33543 |
|    252 |     1816.34 |      2180.37 | 1.20042 |

** HORIZONTALES 2013

#+name: horizontal-slits
| imagen | Espectro |                 AR |                DEC |
|--------+----------+--------------------+--------------------|
| spm165 | spec166  |            83.6141 |            -5.4409 |
| spm169 | spec170  |            83.6146 |            -5.4382 |
| spm237 | spec238  |            83.6166 |            -5.4361 |
| spm232 | spec233  |            83.6157 |            -5.4321 |
| spm226 | spec227  |            83.6076 |            -5.4294 |
| spm149 | spec150  |            83.6231 |            -5.4239 |
| spm154 | spec155  |            83.6237 |            -5.4226 |
| spm159 | spec160  |            83.6238 |            -5.4201 |
| spm033 | spec034  |            83.6107 |            -5.4165 |
| spm029 | spec030  |            83.6084 |            -5.4155 |
|--------+----------+--------------------+--------------------|
|        |          | 83.6158 +/- 0.0019 | -5.4275 +/- 0.0029 |
#+TBLFM: @12$3..@12$4=vmeane(@I..@II);f4

					
					
** VERTICALES 2010
+ From the region file [[file:/ssh:nil:/fs/posgrado01/other0/albafm/WesternShocks/3.CuboWS/1.Posiciones/pos_todas.reg][pos_todas.reg]] it looks like the PA = 3.03 deg

#+name: vertical-slits
| imagen | Espectro |                 AR |                DEC |  Factor |
|--------+----------+--------------------+--------------------+---------|
| spm252 | spec253  |            83.6016 |            -5.4149 | 1.20042 |
| spm173 | spec174  |            83.6020 |            -5.4108 | 1.74544 |
| spm244 | spec245  |            83.6031 |            -5.4152 | 1.01398 |
| spm240 | spec241  |            83.6053 |            -5.4153 | 0.99720 |
| spm236 | spec237  |            83.6071 |            -5.4155 | 0.99791 |
| spm157 | spec158  |            83.6078 |            -5.4118 | 1.64801 |
| spm219 | spec220  |            83.6087 |            -5.4163 | 0.97935 |
| spm248 | spec249  |            83.6091 |            -5.4150 | 1.33543 |
| spm145 | spec146  |            83.6106 |            -5.4109 | 1.60103 |
| spm214 | spec215  |            83.6119 |            -5.4160 | 0.97715 |
| spm137 | spec138  |            83.6133 |            -5.4120 | 1.12438 |
| spm210 | spec211  |            83.6143 |            -5.4163 | 0.98594 |
| spm101 | spec102  |            83.6149 |            -5.4177 | 1.01435 |
| spm128 | spec129  |            83.6156 |            -5.4181 | 1.39099 |
| spm133 | spec134  |            83.6159 |            -5.4123 | 1.20156 |
| spm206 | spec207  |            83.6171 |            -5.4165 | 1.00492 |
| spm124 | spec125  |            83.6184 |            -5.4183 | 1.12601 |
| spm202 | spec203  |            83.6205 |            -5.4167 | 1.00447 |
|--------+----------+--------------------+--------------------+---------|
|        |          | 83.6110 +/- 0.0014 | -5.4150 +/- 0.0006 |         |
#+TBLFM: @20$3..@20$4=vmeane(@I..@II);f4



* Proper motions of the Orion West shocks 
+ [2015-08-26 Wed] Today I discovered that there is a new Massimo Robberto program that has re-observed the whole of Orion with the ACS F775W filter
+ And also various bits with the F130N and F139M WFC3 IR filters
+ This will allow us do to proper motion measurements of all the interesting shocks in our field
+ Relevant images are as follows:
  + JCOL02010 for ACS field W of LL2
  + JCOL09010 (ORIMOS-16) for ACS field just below that, containing the nose of the giant bowshock
  + JCOL03010 ACS includes LL2 and region immediately to W
  + ICOL22030 WFC3 IR image of region W of LL2
  + JCOL05010 ACS field of the big gap between trapezium and LL2
  + JCOL11010 ACS way S with filaments along extension of bright bar
+ Missing images

+ Older images that we might use
  + An [S II] WFPC2 image that covers the circular bubble to the S of LL2 plus the upper partial "nose" of the big bowshock: U8OC2604M from Bally's ACS program 9825
  + [X] We should actually get the entire set of these
    + [2015-08-27 Thu] Downloaded to =/fs/nil/other0/will/orion-bally-wfpc2-2004/=
  + There is a interesting bowshock seen in [S II] to the W of the end of HH269, but not quite as W as the flatter bow that we can see in Ha and NIR
    + RA: 05 34 59.81
    + Dec: -05 23 39.94
    + Image: U8OC1804M
  + This could be a candidate for the same flow as the big bowshock
  + We also need to look into possible correspondences with the molecular outflows from Orion S

* Modifying org export to include header arguments                 :noexport:
Based on http://kitchingroup.cheme.cmu.edu/blog/2014/09/22/Showing-what-data-went-into-a-code-block-on-export/


** This is all copied from John Kitchin's page
Here is how we can get a list of the table-names indicating their name or that they are results (results are enclosed in ()).

#+BEGIN_SRC emacs-lisp :results list
(org-element-map (org-element-parse-buffer) 'table
  (lambda (element)     
    (or (org-element-property :name element) (org-element-property :results element))))
#+END_SRC

#+RESULTS:
- vertical-image-and-fullspec
- ("vertical-all-parameters")
- horizontal-slits
- vertical-slits
- ("")

Similarly, here is the list of parameters for each block.

#+BEGIN_SRC emacs-lisp :results list
(org-element-map (org-element-parse-buffer) 'src-block
  (lambda (element)     
    (org-element-property :parameters element)))
#+END_SRC

#+RESULTS:
- :return figfile :results file
- :return table :dir ~/Dropbox/SPMJAN10/reducciones/posiciones :exports both
- :results output
- :results silent
- :results output
- :results silent
- :results output
- :results list


** My attempt to extend it to '#+header:' elements
#+BEGIN_SRC emacs-lisp :results list
  (org-element-map (org-element-parse-buffer) 'src-block
    (lambda (element)
    (org-element-property :header element)))
#+END_SRC

#+RESULTS:
- (":var table=vertical-image-and-fullspec")
- (":var intable=vertical-image-and-fullspec")
- (":var vtab=vertical-all-parameters" ":var ignore=positions-to-drop")



** And to named plain lists
#+BEGIN_SRC emacs-lisp :results list
(org-element-map (org-element-parse-buffer) 'plain-list
  (lambda (element)     
    (or (org-element-property :name element) (org-element-property :results element))))
#+END_SRC

#+RESULTS:
- positions-to-drop
- ("")
- ("")
- ("")


** Now my version of Kitchin's output filters

#+BEGIN_SRC emacs-lisp
  (defun ox-mrkup-filter-table (text back-end info)
    (let ((tblname (pop tblnames)))
      (message "tblname is \"%s\"" tblname)
      ; pop does not remove nil from the list, so we do it here.
      (when (null tblname) (setq tblnames (cdr tblnames)))
      (cond
       ((listp tblname)  ; from results
        (concat (format "<br><pre class=\"example\">Results table name: %s</pre>" (car tblname)) text))
       ((null tblname)   ; no name
        text)
       (t ; everything else
        (concat (format "<br><pre class=\"example\">Table name: %s</pre>" tblname) text)))))

  (defun ox-mrkup-filter-plain-list (text back-end info)
    (let ((listname (pop listnames)))
      (message "listname is \"%s\"" listname)
      ; pop does not remove nil from the list, so we do it here.
      (when (null listname) (setq listnames (cdr listnames)))
      (cond
       ((null listname)   ; no name
        text)
       (t ; everything else
        (concat (format "<br><pre class=\"example\">List name: %s</pre>" listname) text)))))

  (defun ox-mrkup-filter-src-block (text back-end info)
    (let ((params (pop src-params))
          (hparams (pop hdr-params))
          (lang (pop src-langs)))
      (when (null params) (setq src-params (cdr src-params)))
      (when (null hparams) (setq hdr-params (cdr hdr-params)))
      (if params  
          (concat (format "<pre class=\"example\">Language = %s\nParameters = %s\nHeader = %s</pre>" lang params hparams) text)
        text)))

  ;; preprocess to get table names, src parameters and languages.
  (let ((tblnames (org-element-map (org-element-parse-buffer) 'table
                    (lambda (element)     
                      (or (org-element-property :name element)                    
                          (org-element-property :results element)))))

        (listnames (org-element-map (org-element-parse-buffer) 'plain-list
                    (lambda (element)     
                      (org-element-property :name element))))
      
        (src-params (org-element-map (org-element-parse-buffer) 'src-block
                      (lambda (element)     
                        (org-element-property :parameters element))))

        (hdr-params (org-element-map (org-element-parse-buffer) 'src-block
                      (lambda (element)     
                        (org-element-property :header element))))

        (src-langs (org-element-map (org-element-parse-buffer) 'src-block
                     (lambda (element)     
                       (org-element-property :language element))))

        ;; register the filters
        (org-export-filter-table-functions '(ox-mrkup-filter-table))
        (org-export-filter-plain-list-functions '(ox-mrkup-filter-plain-list))
        (org-export-filter-src-block-functions '(ox-mrkup-filter-src-block)))

    ;; and export the result
    (browse-url (org-export-to-file 'html "alba-orion-west.html")))
#+END_SRC

#+RESULTS:
: #<process open alba-orion-west.html>

